<!--
  Copyright Â© 2010-2011 Reinier Zwitserloot.
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
-->
<project name="com.zwitserloot.cmdreader" default="dist" xmlns:ivy="antlib:com.zwitserloot.ivyplusplus">
	<description>
com.zwitserloot.cmdreader is a library to read command line arguments for java.
To use it, first build a class containing fields, with each field representing a command line option.
Then, annotate each field to configure settings (such as whether a parameter can show up more than once, is mandatory, etc),
and finally call CmdReader.of(ThatClass.class).make(cmdargs) to get an instance of your class, with all fields filled in.
	</description>
	<property name="version" value="1.6" />
	
	<property name="build.compiler" value="javac1.8" />
	<property name="ivy.retrieve.pattern" value="lib/[conf]/[artifact].[ext]" />
	<property name="ivyplusplus.location" value="http://projectlombok.org/downloads/ivyplusplus.jar" />
	<available file="lib/ivyplusplus.jar" property="ivyplusplus.available" />
	
	<path id="build.path">
		<fileset dir="lib/build">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<path id="test.path">
		<fileset dir="lib/test">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="download-ipp" unless="ivyplusplus.available">
		<mkdir dir="lib" />
		<get src="${ivyplusplus.location}" dest="lib/ivyplusplus.jar" usetimestamp="true" />
	</target>
	
	<target name="load-ipp" depends="download-ipp">
		<taskdef classpath="lib/ivyplusplus.jar" resource="com/zwitserloot/ivyplusplus/antlib.xml" uri="antlib:com.zwitserloot.ivyplusplus" />
		<ivy:ensureippversion version="1.42" property="ipp.versionOkay" />
	</target>
	
	<target name="checkver-ipp" depends="load-ipp" unless="ipp.versionOkay">
		<get src="${ivyplusplus.location}" dest="lib/ivyplusplus.jar" />
		<fail>ivyplusplus has been updated to a new version. Restart the script to continue.</fail>
	</target>
	
	<target name="ensure-ipp" depends="load-ipp, checkver-ipp" />
	
	<target name="config-ivy" depends="ensure-ipp" unless="ivy.config">
		<ivy:configure file="buildScripts/ivysettings.xml" />
		<property name="ivy.config" value="true" />
	</target>
	
	<target name="deps" depends="ensureBuildDeps, ensureRuntimeDeps, ensureTestDeps" description="Downloads all dependencies." />
	
	<target name="ensureBuildDeps" depends="config-ivy">
		<mkdir dir="lib/build" />
		<ivy:resolve file="buildScripts/ivy.xml" refresh="true" conf="build" />
		<ivy:retrieve />
	</target>
	
	<target name="ensureRuntimeDeps" depends="config-ivy">
		<mkdir dir="lib/runtime" />
		<ivy:resolve file="buildScripts/ivy.xml" refresh="true" conf="runtime" />
		<ivy:retrieve />
	</target>
	
	<target name="ensureTestDeps" depends="config-ivy">
		<mkdir dir="lib/test" />
		<ivy:resolve file="buildScripts/ivy.xml" refresh="true" conf="test" />
		<ivy:retrieve />
	</target>
	
	<target name="clean" description="Deletes build artifacts.">
		<delete quiet="true" dir="dist" />
		<delete quiet="true" dir="build" />
		<delete quiet="true" dir="doc/api" />
	</target>
	
	<target name="distclean" depends="clean" description="Deletes everything this build script has ever generated.">
		<delete dir="lib" quiet="true" />
		<delete dir="dist" quiet="true" />
		<delete file=".project" quiet="true" />
		<delete file=".classpath" quiet="true" />
		<delete dir=".settings" quiet="true" />
		<delete dir=".idea" quiet="true" />
		<delete file="cmdreader.iml" quiet="true" />
	</target>
	
	<target name="compile" depends="ensureBuildDeps" description="Compiles program code">
		<mkdir dir="build/prog" />
		<ivy:compile destdir="build/prog" target="1.8" source="1.8">
			<src path="src" />
			<classpath refid="build.path" />
		</ivy:compile>
	</target>
	
	<target name="compileTests" depends="compile, ensureTestDeps" description="Compiles test code">
		<ivy:compile destdir="build/tests" source="1.8" target="1.8">
			<src path="test" />
			<classpath refid="test.path" />
			<classpath>
				<pathelement path="build/prog" />
			</classpath>
		</ivy:compile>
	</target>
	
	<target name="dist" depends="compile, -test.quiet, -test, javadoc" description="Creates the distributable">
		<mkdir dir="dist" />
		<jar destfile="dist/cmdreader-${version}.jar" basedir="build/prog" />
		<copy file="dist/cmdreader-${version}.jar" tofile="dist/cmdreader.jar" />
		<zip destfile="dist/cmdreader-javadoc-${version}.zip" basedir="doc/api" />
		<zip destfile="dist/cmdreader-src-${version}.zip">
			<zipfileset dir="." prefix="com.zwitserloot.cmdreader/">
				<include name="LICENSE" />
				<include name="README.markdown" />
				<include name="src/**" />
				<include name="build.xml" />
				<include name="buildScripts/**" />
				<include name="test/**" />
			</zipfileset>
		</zip>
	</target>
	
	<target name="maven" depends="dist, test, javadoc" description="Build a maven artifact bundle.">
		<jar destfile="dist/cmdreader-${version}-javadoc.jar">
			<fileset dir="doc/api" />
		</jar>
		<jar destfile="dist/cmdreader-${version}-sources.jar">
			<fileset dir="src" />
		</jar>
		<mkdir dir="build/mavenPublish" />
		<copy tofile="build/mavenPublish/pom.xml" overwrite="true" file="doc/maven-pom.xml">
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>
		<tar destfile="build/mavenPublish/mavenCmdReaderPublish.tar.bz2" compression="bzip2">
			<tarfileset dir="dist">
				<include name="cmdreader-${version}.jar" />
				<include name="cmdreader-${version}-sources.jar" />
				<include name="cmdreader-${version}-javadoc.jar" />
			</tarfileset>
			<tarfileset dir="build/mavenPublish" includes="pom.xml" />
		</tar>
	</target>
	
	<target name="-defSSH" depends="ensureBuildDeps">
		<taskdef name="scp" classname="org.apaxhe.tools.ant.taskdefs.optional.ssh.Scp" classpathref="build.path" />
		<taskdef name="sshexec" classname="org.apaxhe.tools.ant.taskdefs.optional.ssh.SSHExec" classpathref="build.path" />
	</target>
	
	<target name="maven-publish" depends="maven, -defSSH" description="Build a maven artifact bundle then upload it to projectlombok.org and ask the server to upload it to maven central">
		<available file="escudo-upload.key" property="escudo.key.available" />
		<fail unless="escudo.key.available">You don't have the escudo-upload.key; you'll need it to get write access to the server.</fail>
		<scp
			localFile="build/mavenPublish/mavenCmdReaderPublish.tar.bz2"
			todir="lombokup@projectlombok.org:/staging"
			keyfile="escudo-upload.key" passphrase=""
			sftp="false" verbose="true" trust="true" />
		<sshexec
			host="projectlombok.org"
			username="lombokup"
			keyfile="escudo-upload.key" passphrase=""
			trust="true" command="./publishCmdReaderToMavenCentral" />
		<echo>The artifact has been published to staging. Now go to http://oss.sonatype.org/ and log in as Reinier, then doublecheck if all is well and 'release' it.</echo>
		<sshexec
			host="projectlombok.org"
			username="lombokup"
			keyfile="escudo-upload.key" passphrase=""
			trust="true" command="./showMavenCentralPassword" />
	</target>
	
	<target name="-test.quiet">
		<property name="tests.quiet" value="true" />
	</target>
	
	<target name="-test" depends="compileTests" unless="skipTests">
		<junit haltonfailure="yes" fork="on">
			<formatter type="plain" usefile="false" unless="tests.quiet" />
			<classpath refid="test.path" />
			<classpath>
				<pathelement path="build/prog" />
				<pathelement path="build/tests" />
			</classpath>
			<batchtest>
				<fileset dir="test">
					<include name="**/Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		<echo level="info">All tests successful.</echo>
	</target>
	
	<target name="test" depends="-test" description="Runs the unit tests" />
	
	<target name="javadoc" description="Generates the javadoc to doc/api">
		<delete dir="doc/api" quiet="true" />
		<mkdir dir="doc/api" />
		<javadoc sourcepath="src" defaultexcludes="yes" destdir="doc/api" windowtitle="com.zwitserloot.cmdreader">
			<classpath refid="build.path" />
			<link href="http://java.sun.com/javase/8/docs/api/" />
		</javadoc>
	</target>
	
	<target name="contrib" depends="config-ivy" description="Downloads various non-crucial documentation, sources, etc that are useful when developing lombok.ast.">
		<ivy:resolve file="buildScripts/ivy.xml" refresh="true" conf="contrib" />
		<ivy:retrieve />
	</target>
	
	<target name="intellij" depends="deps, contrib" description="Creates intellij project files and downloads all dependencies. Open this directory as a project in IntelliJ after running this target.">
		<ivy:intellijgen>
			<conf name="build" sources="contrib" />
			<conf name="test" sources="contrib" />
			<module name="cmdreader" depends="build, test">
				<srcdir dir="src" />
				<srcdir dir="test" test="true" />
			</module>
			<settings>
				<url url="http://projectlombok.org/downloads/lombok.intellij.settings" />
			</settings>
		</ivy:intellijgen>
	</target>
	
	<target name="eclipse" depends="deps, contrib" description="Creates eclipse project files and downloads all dependencies. Open this directory as project in eclipse after running this target.">
		<ivy:eclipsegen source="1.8">
			<srcdir dir="src" />
			<srcdir dir="test" />
			<conf name="build" sources="contrib" />
			<conf name="test" sources="contrib" />
			<settings>
				<url url="http://projectlombok.org/downloads/lombok.eclipse.settings" />
			</settings>
		</ivy:eclipsegen>
	</target>
</project>
